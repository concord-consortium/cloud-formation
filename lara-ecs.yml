AWSTemplateFormatVersion: '2010-09-09'
Description: lara ecs stack
Parameters:
  Environment:
    Type: String
    Default: qa
    AllowedValues: [qa, staging, production]
    Description: Enter staging or production. Default is staging.
  SSLCertificateName:
    Type: String
    AllowedValues: [star.concordqa.org]
    Description: Two certificates are registered with AWS choose which one to use for the
      load balancer
  DatabaseSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Select security group of the RDS database. This security group will
      be modified to allow access by the EC2 instances in this stack
  DomainName:
    Type: String
    Description: The DNS name that will be created or updated to point at the load
      balancer

  ClusterStackName:
    Type: String
    Description: The name of the CloudFormation stack that manages the cluster you want
      this application deployed in.  The cluster security group will be added to the
      database security group to allow the app to access the database.

  AddFakeAuthProvider:
    Type: String
    AllowedValues: ['true', 'false']
    Description: The LARA Oauth2 code requires two authentication providers
      in some places of the code, so if you are only going to configure one then set
      this to true
  PortalClientID:
    Type: String
    Default: authoring
    Description: Client ID used with OAuth2 connection to the portal. This is used
      globably for all of the Portals configured for this LARA instance.
  ITSITestSecret:
    Type: String
    Description: The OAuth2 key to authenticate via itsi-test. If this is not set, the portal
      will not be configured.
  LearnStemSecret:
    Type: String
    Description: The OAuth2 key to authenticate via learn-stem. If this is not set, the portal
      will not be configured.
  LearnStagingSecret:
    Type: String
    Description: The OAuth2 key to authenticate via learn.staging. If this is not set, the portal
      will not be configured.
  AssessmentPortalSecret:
    Type: String
    Description: The OAuth2 key to authenticate via asessment.portal. If this is not set, the portal
      will not be configured.
  HASPortalSecret:
    Type: String
    Description: The OAuth2 key to authenticate via has.portal. If this is not set, the portal
      will not be configured.
  ITSIPortalSecret:
    Type: String
    Description: The OAuth2 key to authenticate via itsi.portal. If this is not set, the portal
      will not be configured.
  LearnPortalSecret:
    Type: String
    Description: The OAuth2 key to authenticate via learn. If this is not set, the portal
      will not be configured.
  CRaterPassword:
    Type: String
  DbHost:
    Type: String
    Description: The hostname of the database. Template assumes database name is portal.
  DbPassword:
    Type: String
    Description: The password of the database. Template assumes username is master.
  NewRelicAppName:
    Type: String
    Description: App name to show in NewRelic
  NewRelicLicenseKey:
    Type: String
  RollbarsKey:
    Type: String
  RailsSecretToken:
    Type: String
  SesKey:
    Type: String
    Description: key to connect to AWS SES for email
  SesSecret:
    Type: String
  LabBookProviderURL:
    Type: String
    Description: URL to the labbook service for use in the labbook items
  ModelJsonListURL:
    Type: String
    Description: URL of the model json used in ITSI authoring. It is typically
      a URL to a portal model library.
  CloudWatchLogGroup:
    Type: String
    Description: logging group in cloud watch where the aws logs will be sent
  MaxNumLaraWebTasks:
    Type: String
    Description: maxium number of LARA Web tasks the autoscaler will spin up
  MinNumLaraWebTasks:
    Type: String
    Description: minimum number of LARA Web tasks the autoscaler will spin up
  LaraDockerImage:
    Type: String
    Description: docker image to use for the web container and worker container

Conditions:
  AddFakeAuthProviderCond: !Equals [!Ref AddFakeAuthProvider, 'true']
  AddITSITest: !Not [!Equals [!Ref ITSITestSecret, ""]]
  AddLearnStem: !Not [!Equals [!Ref LearnStemSecret, ""]]
  AddLearnStaging: !Not [!Equals [!Ref LearnStagingSecret, ""]]
  AddAssessmentPortal: !Not [!Equals [!Ref AssessmentPortalSecret, ""]]
  AddHASPortal: !Not [!Equals [!Ref HASPortalSecret, ""]]
  AddITSIPortal: !Not [!Equals [!Ref ITSIPortalSecret, ""]]
  AddLearnPortal: !Not [!Equals [!Ref LearnPortalSecret, ""]]

Resources:
  AppLoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/concordqa-devops/cloud-formation/ecs-load-balancer.yml
      Parameters:
        LoadBalancerIdleTimeout: '180'
        DomainName: !Ref 'DomainName'
        ClusterSecurityGroupId: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterSecurityGroupId' }

  AppListener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      - CertificateArn: !FindInMap [SSLCertificateMap, !Ref 'SSLCertificateName', Id]
      DefaultActions:
      - TargetGroupArn: !Ref AppTargetGroup
        Type: forward
      LoadBalancerArn: !GetAtt AppLoadBalancerStack.Outputs.LoadBalancer
      Port: '443'
      Protocol: HTTPS
  AppListener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - TargetGroupArn: !Ref AppTargetGroup
        Type: forward
      LoadBalancerArn: !GetAtt AppLoadBalancerStack.Outputs.LoadBalancer
      Port: '80'
      Protocol: HTTP

  AppService:
    Type: AWS::ECS::Service
    DependsOn:
    - AppListener443
    - AppListener80
    Properties:
      Role: ecsServiceRole
      TaskDefinition: !Ref AppTaskDefinition
      DesiredCount: !Ref MinNumLaraWebTasks
      LoadBalancers:
      - TargetGroupArn: !Ref AppTargetGroup
        ContainerPort: '80'
        ContainerName: App
      Cluster: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterName' }

  AppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: '30'
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: '2'
      UnhealthyThresholdCount: '3'
      HealthCheckTimeoutSeconds: '5'
      # even though this is set to 80 the actual port will
      # be overriden by each of the containers that is added
      # to the target group
      Port: '80'
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '120'
      VpcId: vpc-c116d1bb
      # Use this name property to force the TargetGroup to be recreated whenever the load
      # balancer is recreated. Otherwise CloudFormation tries to add the TargetGroup
      # to the new load balancer before removing it from the old one. And that results
      # in an error.
      Name: !Sub "${AWS::StackName}-${AppLoadBalancerStack.Outputs.LoadBalancerEndingId}"

  AppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AWS::StackName}-App"
      ContainerDefinitions:
      - Name: App
        Image: !Ref LaraDockerImage
        Cpu: "512"
        PortMappings:
        - ContainerPort: '80'
        Command:
        - "./docker/prod/run.sh"
        Memory: "900"
        Essential: "true"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: us-east-1
            awslogs-group: !Ref CloudWatchLogGroup
            awslogs-stream-prefix: lara
        Environment:
        - Name: CONCORD_CONFIGURED_PORTALS
          Value: !Join
          - ' '
          - - !If [ AddFakeAuthProviderCond, HAS_STAGING, !Ref 'AWS::NoValue']
            - !If [ AddLearnStaging, LEARN_STAGING, !Ref 'AWS::NoValue']
            - !If [ AddLearnStem, LEARN_STEM_STAGING, !Ref 'AWS::NoValue']
            - !If [ AddITSITest, ITSI_TEST, !Ref 'AWS::NoValue']
            - !If [ AddAssessmentPortal, ASSESSMENT, !Ref 'AWS::NoValue']
            - !If [ AddHASPortal, HAS, !Ref 'AWS::NoValue']
            - !If [ AddITSIPortal, ITSI, !Ref 'AWS::NoValue']
            - !If [ AddLearnPortal, Learn, !Ref 'AWS::NoValue']

        # fake auth provider config
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_CLIENT_ID
            Value: localhost
          - !Ref 'AWS::NoValue'
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_CLIENT_SECRET
            Value: unknown
          - !Ref 'AWS::NoValue'
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_DISPLAY_NAME
            Value: Do NOT Use Please
          - !Ref 'AWS::NoValue'
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_URL
            Value: http://has.staging.concord.org/
          - !Ref 'AWS::NoValue'

        # itsi test configuration
        - !If
          - AddITSITest
          - Name: CONCORD_ITSI_TEST_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSITest
          - Name: CONCORD_ITSI_TEST_CLIENT_SECRET
            Value: !Ref ITSITestSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSITest
          - Name: CONCORD_ITSI_TEST_URL
            Value: https://itsi-test.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # learn stem staging configuration
        - !If
          - AddLearnStem
          - Name: CONCORD_LEARN_STEM_STAGING_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStem
          - Name: CONCORD_LEARN_STEM_STAGING_CLIENT_SECRET
            Value: !Ref LearnStemSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStem
          - Name: CONCORD_LEARN_STEM_STAGING_URL
            Value: https://learn-stem.staging.concord.org/
          - !Ref 'AWS::NoValue'

        # learn staging configuration
        - !If
          - AddLearnStaging
          - Name: CONCORD_LEARN_STAGING_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStaging
          - Name: CONCORD_LEARN_STAGING_CLIENT_SECRET
            Value: !Ref LearnStagingSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStaging
          - Name: CONCORD_LEARN_STAGING_URL
            Value: https://learn.staging.concord.org/
          - !Ref 'AWS::NoValue'

        # assessment configuration
        - !If
          - AddAssessmentPortal
          - Name: CONCORD_ASSESSMENT_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddAssessmentPortal
          - Name: CONCORD_ASSESSMENT_CLIENT_SECRET
            Value: !Ref AssessmentPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddAssessmentPortal
          - Name: CONCORD_ASSESSMENT_URL
            Value: https://ngss-assessment.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # has configuration
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_CLIENT_SECRET
            Value: !Ref HASPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_DISPLAY_NAME
            Value: HAS
          - !Ref 'AWS::NoValue'
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_URL
            Value: https://has.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # itsi configuration
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_CLIENT_SECRET
            Value: !Ref ITSIPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_DISPLAY_NAME
            Value: ITSI
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_URL
            Value: https://itsi.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # learn confiuration
        - !If
          - AddLearnPortal
          - Name: CONCORD_LEARN_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnPortal
          - Name: CONCORD_LEARN_CLIENT_SECRET
            Value: !Ref LearnPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnPortal
          - Name: CONCORD_LEARN_URL
            Value: https://learn.concord.org/
          - !Ref 'AWS::NoValue'

        - Name: C_RATER_CLIENT_ID
          Value: CONCORD
        - Name: C_RATER_PASSWORD
          Value: !Ref CRaterPassword
        - Name: C_RATER_USERNAME
          Value: extSysCRTR02dev

        - Name: DB_HOST
          Value: !Ref DbHost
        - Name: DB_NAME
          Value: portal
        - Name: DB_PASSWORD
          Value: !Ref DbPassword
        - Name: DB_USER
          Value: master
        - Name: NEW_RELIC_APP_NAME
          Value: !Ref NewRelicAppName
        - Name: NEW_RELIC_LICENSE_KEY
          Value: !Ref NewRelicLicenseKey
        # Number of unicorn processes to start up. Most people recommend
        # 2 times the number of cores. Since we are containerized keeping this at 1 seems
        # to work well.  If you change this number then you should also tweak the
        # CPU and Memory setting of this task.
        - Name: NUM_UNICORN_PROCESSES
          Value: '1'
        - Name: RAILS_STDOUT_LOGGING
          Value: 'true'
        - Name: ROLLBARS_KEY
          Value: !Ref RollbarsKey
        - Name: SECRET_TOKEN
          Value: !Ref RailsSecretToken
        - Name: SES_KEY
          Value: !Ref SesKey
        - Name: SES_SECRET
          Value: !Ref SesSecret
        - Name: UPLOAD_ONLY_MODEL_URLS
          Value: https://models-resources.concord.org/itsi/upload_photo/index.html
        - Name: LABBOOK_PROVIDER_URL
          Value: !Ref LabBookProviderURL
        - Name: MODEL_JSON_LIST_URL
          Value: !Ref ModelJsonListURL
        - Name: LARA_VERSION
          Value: !Select [1, !Split [":", !Ref LaraDockerImage]]

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref CloudWatchLogGroup

  DBIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'DatabaseSecurityGroupId'
      IpProtocol: tcp
      FromPort: '3306'
      ToPort: '3306'
      SourceSecurityGroupId: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterSecurityGroupId' }

  AppScalingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      # Change to location of scaling Template
      TemplateURL: https://s3.amazonaws.com/concordqa-devops/cloud-formation/task-autoscale-2-step-up.yml
      Parameters:
        ServiceName: !GetAtt AppService.Name
        ClusterName: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterName' }
        MaxNumTasks: !Ref MaxNumLaraWebTasks
        MinNumTasks: !Ref MinNumLaraWebTasks
        # we are using a longer alarm evaluation period to deal with the cooldown
        # period. There might be a better way to handle this.
        ScaleUpCooldown: '0'
        ScaleUpStepBoundary: '25'
        ScaleUpStepAdjustment1: '100'
        ScaleUpStepAdjustment2: '200'
        ScaleUpAlarmThreshold: '75'
        # this 2 minute evaluation period helps with an initial spike
        # when a new container is started, and it also helps the CPUUtilization start
        # to reflect the change in capacity. This is also the point of the Cooldown setting
        # but in that case I think it prevents more scaling up if we aren't able to keep up
        # with demand.
        ScaleUpAlarmEvaluationPeriods: '2'
        ScaleUpAlarmPeriod: '60'
        ScaleDownCooldown: '300'
        ScaleDownStepAdjustment: '-1'
        ScaleDownAlarmThreshold: '35'
        # this uses 5 periods of 1 minute instead of 1 period of 5 minutes
        # this approach helps offset a running average affecting the responsiveness.
        # If the CPU is at 49%, but 5 minutes ago it started at 1% then a 5 minute average
        # could be below 35%. However with 5 evaluation periods, then the 49% will cancel
        # the alarm.
        ScaleDownAlarmEvaluationPeriods: '5'
        ScaleDownAlarmPeriod: '60'

  WorkerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AWS::StackName}-Worker"
      ContainerDefinitions:
      - Name: Worker
        Image: !Ref LaraDockerImage
        Cpu: "512"
        Command:
        - script/delayed_job
        - run
        Memory: "900"
        Essential: "true"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: us-east-1
            awslogs-group: !Ref CloudWatchLogGroup
            awslogs-stream-prefix: lara
        Environment:
        - Name: CONCORD_CONFIGURED_PORTALS
          Value: !Join
          - ' '
          - - !If [ AddFakeAuthProviderCond, HAS_STAGING, !Ref 'AWS::NoValue']
            - !If [ AddLearnStaging, LEARN_STAGING, !Ref 'AWS::NoValue']
            - !If [ AddLearnStem, LEARN_STEM_STAGING, !Ref 'AWS::NoValue']
            - !If [ AddITSITest, ITSI_TEST, !Ref 'AWS::NoValue']
            - !If [ AddAssessmentPortal, ASSESSMENT, !Ref 'AWS::NoValue']
            - !If [ AddHASPortal, HAS, !Ref 'AWS::NoValue']
            - !If [ AddITSIPortal, ITSI, !Ref 'AWS::NoValue']
            - !If [ AddLearnPortal, Learn, !Ref 'AWS::NoValue']

        # fake auth provider config
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_CLIENT_ID
            Value: localhost
          - !Ref 'AWS::NoValue'
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_CLIENT_SECRET
            Value: unknown
          - !Ref 'AWS::NoValue'
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_DISPLAY_NAME
            Value: Do NOT Use Please
          - !Ref 'AWS::NoValue'
        - !If
          - AddFakeAuthProviderCond
          - Name: CONCORD_HAS_STAGING_URL
            Value: http://has.staging.concord.org/
          - !Ref 'AWS::NoValue'

        # itsi test configuration
        - !If
          - AddITSITest
          - Name: CONCORD_ITSI_TEST_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSITest
          - Name: CONCORD_ITSI_TEST_CLIENT_SECRET
            Value: !Ref ITSITestSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSITest
          - Name: CONCORD_ITSI_TEST_URL
            Value: https://itsi-test.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # learn docker staging configuration
        - !If
          - AddLearnStem
          - Name: CONCORD_LEARN_STEM_STAGING_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStem
          - Name: CONCORD_LEARN_STEM_STAGING_CLIENT_SECRET
            Value: !Ref LearnStemSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStem
          - Name: CONCORD_LEARN_STEM_STAGING_URL
            Value: https://learn-stem.staging.concord.org/
          - !Ref 'AWS::NoValue'

        # learn staging configuration
        - !If
          - AddLearnStaging
          - Name: CONCORD_LEARN_STAGING_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStaging
          - Name: CONCORD_LEARN_STAGING_CLIENT_SECRET
            Value: !Ref LearnStagingSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnStaging
          - Name: CONCORD_LEARN_STAGING_URL
            Value: https://learn.staging.concord.org/
          - !Ref 'AWS::NoValue'

        # assessment configuration
        - !If
          - AddAssessmentPortal
          - Name: CONCORD_ASSESSMENT_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddAssessmentPortal
          - Name: CONCORD_ASSESSMENT_CLIENT_SECRET
            Value: !Ref AssessmentPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddAssessmentPortal
          - Name: CONCORD_ASSESSMENT_URL
            Value: https://ngss-assessment.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # has configuration
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_CLIENT_SECRET
            Value: !Ref HASPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_DISPLAY_NAME
            Value: HAS
          - !Ref 'AWS::NoValue'
        - !If
          - AddHASPortal
          - Name: CONCORD_HAS_URL
            Value: https://has.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # itsi configuration
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_CLIENT_SECRET
            Value: !Ref ITSIPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_DISPLAY_NAME
            Value: ITSI
          - !Ref 'AWS::NoValue'
        - !If
          - AddITSIPortal
          - Name: CONCORD_ITSI_URL
            Value: https://itsi.portal.concord.org/
          - !Ref 'AWS::NoValue'

        # learn confiuration
        - !If
          - AddLearnPortal
          - Name: CONCORD_LEARN_CLIENT_ID
            Value: !Ref PortalClientID
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnPortal
          - Name: CONCORD_LEARN_CLIENT_SECRET
            Value: !Ref LearnPortalSecret
          - !Ref 'AWS::NoValue'
        - !If
          - AddLearnPortal
          - Name: CONCORD_LEARN_URL
            Value: https://learn.concord.org/
          - !Ref 'AWS::NoValue'

        - Name: C_RATER_CLIENT_ID
          Value: CONCORD
        - Name: C_RATER_PASSWORD
          Value: !Ref CRaterPassword
        - Name: C_RATER_USERNAME
          Value: extSysCRTR02dev

        - Name: DB_HOST
          Value: !Ref DbHost
        - Name: DB_NAME
          Value: portal
        - Name: DB_PASSWORD
          Value: !Ref DbPassword
        - Name: DB_USER
          Value: master
        - Name: NEW_RELIC_APP_NAME
          Value: !Ref NewRelicAppName
        - Name: NEW_RELIC_LICENSE_KEY
          Value: !Ref NewRelicLicenseKey
        - Name: RAILS_STDOUT_LOGGING
          Value: 'true'
        - Name: ROLLBARS_KEY
          Value: !Ref RollbarsKey
        - Name: SECRET_TOKEN
          Value: !Ref RailsSecretToken
        - Name: SES_KEY
          Value: !Ref SesKey
        - Name: SES_SECRET
          Value: !Ref SesSecret
        - Name: UPLOAD_ONLY_MODEL_URLS
          Value: https://models-resources.concord.org/itsi/upload_photo/index.html
        - Name: LABBOOK_PROVIDER_URL
          Value: !Ref LabBookProviderURL
        - Name: MODEL_JSON_LIST_URL
          Value: !Ref ModelJsonListURL

  WorkerService:
    Type: AWS::ECS::Service
    Properties:
      TaskDefinition: !Ref "WorkerTaskDefinition"
      DesiredCount: 1
      Cluster: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterName' }

  WorkerScalingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      # Change to location of scaling Template
      TemplateURL: https://s3.amazonaws.com/concordqa-devops/cloud-formation/task-autoscale-2-step-up.yml
      Parameters:
        ServiceName: !GetAtt WorkerService.Name
        ClusterName: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterName' }
        MaxNumTasks: '10'
        MinNumTasks: '1'
        ScaleUpCooldown: '240'
        ScaleUpStepBoundary: '25'
        ScaleUpStepAdjustment1: '100'
        ScaleUpStepAdjustment2: '200'
        ScaleUpAlarmThreshold: '75'
        ScaleUpAlarmEvaluationPeriods: '1'
        ScaleUpAlarmPeriod: '60'
        ScaleDownCooldown: '300'
        ScaleDownStepAdjustment: '-1'
        ScaleDownAlarmThreshold: '35'
        # this uses 5 periods of 1 minute instead of 1 period of 5 minutes
        # this approach helps offset a running average affecting the responsiveness.
        # If the CPU is at 49%, but 5 minutes ago it started at 1% then a 5 minute average
        # could be below 35%. However with 5 evaluation periods, then the 49% will cancel
        # the alarm.
        ScaleDownAlarmEvaluationPeriods: '5'
        ScaleDownAlarmPeriod: '60'

Mappings:
  SSLCertificateMap:
    star.concordqa.org:
      Id: arn:aws:acm:us-east-1:816253370536:certificate/7b8bb00e-7aa4-4b9f-a722-f49c828af83c
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "App Config"
      Parameters:
      - LaraDockerImage
      - CRaterPassword
      - DbHost
      - DbPassword
      - LabBookProviderURL
      - ModelJsonListURL
      - NewRelicAppName
      - NewRelicLicenseKey
      - RailsSecretToken
      - RollbarsKey
      - SesKey
      - SesSecret
    - Label:
        default: "Portals"
      Parameters:
      - AddFakeAuthProvider
      - PortalClientID
      - AssessmentPortalSecret
      - HASPortalSecret
      - ITSITestSecret
      - ITSIPortalSecret
      - LearnStemSecret
      - LearnPortalSecret
      - LearnStagingSecret
    - Label:
        default: Infrastructure
      Parameters:
      - ClusterStackiName
      - CloudWatchLogGroup
      - DatabaseSecurityGroupId
      - DomainName
      - Environment
      - MaxNumLaraWebTasks
      - MinNumLaraWebTasks
      - SSLCertificateName