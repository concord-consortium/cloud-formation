AWSTemplateFormatVersion: '2010-09-09'
Description: portal ecs stack
Parameters:
  Environment:
    Type: String
    Default: staging
    AllowedValues: [staging, production]
    Description: Enter staging or production. Default is staging.
  ShortName:
    Type: String
    Description: 12 character or less name to use for naming created resources
    MaxLength: '12'
  SSLCertificateName:
    Type: String
    AllowedValues: [star.concord.org, star.portal.concord.org, star.staging.concord.org]
    Description: Two certificates are registered with AWS choose which one to use for the
      load balancer
  DomainName:
    Type: String
    Description: The DNS name that will be created or updated to point at the load
      balancer

  ClusterStackName:
    Type: String
    Description: The name of the CloudFormation stack that manages the cluster you want
      this application deployed in.  The cluster security group will be added to the
      database security group to allow the app to access the database.

  DbHost:
    Type: String
    Description: The hostname of the database. Template assumes database name is portal.
  DbPassword:
    Type: String
    Description: The password of the database.
  DbUserName:
    Type: String
    Default: master
  NewRelicAppName:
    Type: String
    Description: App name to show in NewRelic
  NewRelicLicenseKey:
    Type: String

  CloudWatchLogGroup:
    Type: String
    Description: logging group in cloud watch where the aws logs will be sent
  PortalDockerImage:
    Type: String
    Description: docker image to use for the web container and worker container

  AdminEmail:
    Type: String
    Description: email address used as from address for some automated messages
    Default: learn-help@concord.org
  AuthoringSiteURL:
    Type: String
    Description: URL to the authoring site, this is used for importing activities and a
      convience link.
    Default: https://authoring.staging.concord.org
  HelpEmail:
    Type: String
    Description: email address added to various pages so users can contact us
    Default: learn-help@concord.org
  PadletPassword:
    Type: String
  PadletUser:
    Type: String
  PortalFeatures:
    Type: String
    Description: list of rails engines to load to support exstra features
  PortalReportVersion:
    Type: String
    Description: version of portal report used to construct the REPORT_VIEW_URL using the
      pattern https://portal-report.concord.org/[PortalReportVersion]/ For example 'version/v1.0.0'
  S3AccessKeyId:
    Type: String
  S3SecreateAccessKey:
    Type: String
  S3Bucket:
    Type: String
    Description: name of the bucket not including any region identifiers
  SchoologyConsumerKey:
    Type: String
  SchoologyConsumerSecret:
    Type: String
  SiteKey:
    Type: String
  SiteName:
    Type: String
  SiteURL:
    Type: String
    Description: this is used in places where we need to provide URLs back to this app.
      These references are minimized to only where they are necessary. Examples are in the
      automated email messages, and when providing return urls to external activities.
  SMTPUser:
    Type: String
  SMTPPassword:
    Type: String
  Theme:
    Type: String
  JWTHMACSecret:
    Type: String
    Description: JWT HMAC Secret
  PortalPagesLibraryVersion:
    Type: String
    Description: the version or branch path to the portal pages javascript and css that
      will be added to all web pages of the portal. This path will be added to URL should
      be versioned so there are no issues with caching. For example 'version/v1.1.0' or
      'branch/master'
  ExternalCSSURL:
    Type: String
    Description: location of an additional css file that will be added to every page
      in the Portal.
  ASNAPIKey:
    Type: String
    Description: key to access the ASN apis for searching standards
  GoogleAnalyticsAccount:
    Type: String
    Description: key for Google Analytics
  GoogleOptimizerAccount:
    Type: String
    Description: key for Google Optimize
  GoogleClientKey:
    Type: String
    Description: key for Google SSO OAuth2
  GoogleClientSecret:
    Type: String
    Description: secret for Google SSO OAuth2
  RestartToggle:
    Type: String
    Description: change this value to cause a rolling restart of the containers running
      portal code. This is necessary after running migrations.
  SolrLoadBalancerHostName:
    Type: String
    Description: This is the host name of the internal load balancer setup by the main
      stack.  You can find it in the Outputs of the InternalLoadBalancerStack. It is the
      ELBDNSName property.
  DynamicRobotsTxt:
    Type: String
    Description: set to true to have portal generate robots.txt otherwise the default
      robots.txt will be used which denies all access
    Default: false
    AllowedValues:
    - true
    - false
  OpenGraphTitle:
    Type: String
    Description: OpenGraph title property used for home page
  OpenGraphDescription:
    Type: String
    Description: OpenGraph descriptio property used for home page and other pages without
      their own Description
  OpenGraphImageURL:
    Type: String
    Description: OpenGraph image property used for home page ad other pages without their
      own description

  EnewsAPIKey:
    Type: String
    Description: mailchimp API key to register for enews
  EnewsAPIListID:
    Type: String
    Description: mailchimp list id for enews

Conditions:
  PortalPagesLibraryDefined: !Not [!Equals [!Ref PortalPagesLibraryVersion, ""]]

Resources:
  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/concord-devops/cloud-formation/ecs-load-balancer.yml
      Parameters:
        LoadBalancerIdleTimeout: '180'
        DomainName: !Ref 'DomainName'
        ClusterSecurityGroupId: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterSecurityGroupId' }

  AppService:
    Type: AWS::ECS::Service
    DependsOn:
    - AppListener443
    Properties:
      Role: ecsServiceRole
      TaskDefinition: !Ref AppTaskDefinition
      DesiredCount: '1'
      LoadBalancers:
      - TargetGroupArn: !Ref AppTargetGroup
        ContainerPort: '80'
        ContainerName: App
      Cluster: { 'Fn::ImportValue': !Sub '${ClusterStackName}-ClusterName' }

  AppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: '30'
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: '2'
      UnhealthyThresholdCount: '3'
      HealthCheckTimeoutSeconds: '5'
      # even though this is set to 80 the actual port will
      # be overriden by each of the containers that is added
      # to the target group
      Port: '80'
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '120'
      VpcId: vpc-9c9714f9
      # Use this name property to force the TargetGroup to be recreated whenever the load
      # balancer is recreated. Otherwise CloudFormation tries to add the TargetGroup
      # to the new load balancer before removing it from the old one. And that results
      # in an error.
      Name: !Sub "${ShortName}App-${LoadBalancerStack.Outputs.LoadBalancerEndingId}"

  AppListener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      - CertificateArn: !FindInMap [SSLCertificateMap, !Ref 'SSLCertificateName', Id]
      DefaultActions:
      - TargetGroupArn: !Ref AppTargetGroup
        Type: forward
      LoadBalancerArn: !GetAtt LoadBalancerStack.Outputs.LoadBalancer
      Port: '443'
      Protocol: HTTPS

  AppListener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: redirect
        RedirectConfig:
          Host: '#{host}'
          Path: '/#{path}'
          Port: '443'
          Protocol: 'HTTPS'
          Query: '#{query}'
          StatusCode: HTTP_301
      LoadBalancerArn: !GetAtt LoadBalancerStack.Outputs.LoadBalancer
      Port: '80'
      Protocol: HTTP

  AppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AWS::StackName}-App"
      ContainerDefinitions:
      - Name: App
        Image: !Ref PortalDockerImage
        Cpu: "128"
        PortMappings:
        - ContainerPort: '80'
        Command:
        - bash
        - '-c'
        - 'chmod a+x docker/prod/run.sh && docker/prod/run.sh'
        # These are just test servers they seem to only use about 512mb of memory
        Memory: "700"
        Essential: "true"
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: us-east-1
            awslogs-group: !Ref CloudWatchLogGroup
            awslogs-stream-prefix: portal
        Environment:
        - Name: ADMIN_EMAIL
          Value: !Ref AdminEmail
        - Name: AUTHORING_SITE_URL
          Value: !Ref AuthoringSiteURL
        - Name: DB_HOST
          Value: !Ref DbHost
        - Name: DB_NAME
          Value: portal
        - Name: DB_PASSWORD
          Value: !Ref DbPassword
        - Name: DB_USER
          Value: !Ref DbUserName
        - Name: HELP_EMAIL
          Value: !Ref HelpEmail
        - Name: NEW_RELIC_APP_NAME
          Value: !Ref NewRelicAppName
        - Name: NEW_RELIC_LICENSE_KEY
          Value: !Ref NewRelicLicenseKey
        - Name: NUM_UNICORN_PROCESSES
          Value: '2'
        - Name: PADLET_PASSWORD
          Value: !Ref PadletPassword
        - Name: PADLET_USER
          Value: !Ref PadletUser
        - Name: PORTAL_FEATURES
          Value: !Ref PortalFeatures
        - Name: RAILS_STDOUT_LOGGING
          Value: 'true'
        - Name: REPORT_DOMAINS
          Value: portal-report.concord.org concord-consortium.github.io
        - Name: REPORT_VIEW_URL
          Value: !Sub 'https://portal-report.concord.org/${PortalReportVersion}/'
        - Name: S3_ACCESS_KEY_ID
          Value: !Ref S3AccessKeyId
        - Name: S3_BUCKET
          Value: !Ref S3Bucket
        - Name: S3_SECRET_ACCESS_KEY
          Value: !Ref S3SecreateAccessKey
        - Name: SCHOOLOGY_CONSUMER_KEY
          Value: !Ref SchoologyConsumerKey
        - Name: SCHOOLOGY_CONSUMER_SECRET
          Value: !Ref SchoologyConsumerSecret
        - Name: SITE_KEY
          Value: !Ref SiteKey
        - Name: SITE_NAME
          Value: !Ref SiteName
        - Name: SITE_URL
          Value: !Ref SiteURL
        - Name: SMTP_PASS
          Value: !Ref SMTPPassword
        - Name: SMTP_USER
          Value: !Ref SMTPUser
        - Name: SOLR_HOST
          Value: !Ref SolrLoadBalancerHostName
        - Name: SOLR_PORT
          Value: '80'
        - Name: THEME
          Value: !Ref Theme
        - Name: TOP_LEVEL_CONTAINER_NAME
          Value: activity
        - Name: JWT_HMAC_SECRET
          Value: !Ref JWTHMACSecret
        - !If
          - PortalPagesLibraryDefined
          - Name: PORTAL_PAGES_LIBRARY_URL
            Value: !Sub 'https://s3.amazonaws.com/models-resources/portal-pages/${PortalPagesLibraryVersion}/library'
          - !Ref 'AWS::NoValue'
        - Name: EXTERNAL_CSS_URL
          Value: !Ref ExternalCSSURL
        - Name: ASN_API_KEY
          Value: !Ref ASNAPIKey
        - Name: GOOGLE_ANALYTICS_ACCOUNT
          Value: !Ref GoogleAnalyticsAccount
        - Name: GOOGLE_OPTIMIZER_ACCOUNT
          Value: !Ref GoogleOptimizerAccount
        - Name: GOOGLE_CLIENT_KEY
          Value: !Ref GoogleClientKey
        - Name: GOOGLE_CLIENT_SECRET
          Value: !Ref GoogleClientSecret
        - Name: RESTART_TOGGLE
          Value: !Ref RestartToggle
        - Name: DYNAMIC_ROBOTS_TXT
          Value: !Ref DynamicRobotsTxt
        - Name: CC_PORTAL_VERSION
          Value: !Join
          - ', '
          - - !Join ['-', ['portal', !Select [1, !Split [':', !Ref PortalDockerImage]]]]
            - !Join ['-', ['pages', !Select [1, !Split ['/', !Ref PortalPagesLibraryVersion]]]]
            - !Join ['-', ['report', !Select [1, !Split ['/', !Ref PortalReportVersion]]]]
        - Name: OG_TITLE
          Value: !Ref OpenGraphTitle
        - Name: OG_DESCRIPTION
          Value: !Ref OpenGraphDescription
        - Name: OG_IMAGE_URL
          Value: !Ref OpenGraphImageURL
        - Name: ENEWS_API_KEY
          Value: !Ref EnewsAPIKey
        - Name: ENEWS_API_LISTID
          Value: !Ref EnewsAPIListID
        - Name: ENEWS_API_URI
          Value: 'https://us2.api.mailchimp.com/3.0/lists'

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref CloudWatchLogGroup

Mappings:
  SSLCertificateMap:
    star.concord.org:
      Id: arn:aws:acm:us-east-1:612297603577:certificate/2b62511e-ccc8-434b-ba6c-a8c33bbd509e
    star.portal.concord.org:
      Id: arn:aws:acm:us-east-1:612297603577:certificate/b9b25c17-2083-40fd-a06d-70e09e8b7983
    star.staging.concord.org:
      Id: arn:aws:acm:us-east-1:612297603577:certificate/9c26b1e0-4ba7-4016-babc-34b3e13e8c21

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "App Config"
      Parameters:
      - PortalDockerImage
      - PortalPagesLibraryVersion
      - PortalReportVersion
